#!/usr/bin/env node
import { Command } from 'commander';
import { dbInit, dbMigrate, dbSeed } from '../src/cli/db.js';
import { fetchKlines } from '../src/cli/fetch.js';
import { computeIndicators } from '../src/cli/compute.js';
import { detectPatterns } from '../src/cli/patterns.js';
import { signalsGenerate } from '../src/cli/signals.js';
import { backtestRun } from '../src/cli/backtest.js';
import { paperEquitySnapshot } from '../src/cli/paper.js';
import { resampleCandles } from '../src/cli/resample.js';

const program = new Command();
program
  .name('cs')
  .description('Crypto Signals CLI');

program.command('db:init').action(dbInit);
program.command('db:migrate').action(dbMigrate);
program.command('db:seed').action(dbSeed);
program
  .command('fetch:klines')
  .requiredOption('--symbol <symbol>')
  .option('--from <ms>')
  .option('--to <ms>')
  .option('--interval <interval>', '1m')
  .option('--limit <number>', '1000')
  .option('--resume')
  .option('--server-time')
  .action(fetchKlines);
program
  .command('compute:indicators')
  .requiredOption('--symbol <symbol>')
  .requiredOption('--interval <interval>')
  .action((opts) => computeIndicators(opts));
program
  .command('detect:patterns')
  .requiredOption('--symbol <symbol>')
  .requiredOption('--interval <interval>')
  .action((opts) => detectPatterns(opts));
program
  .command('resample')
  .requiredOption('--from <interval>')
  .requiredOption('--to <interval>')
  .requiredOption('--symbol <symbol>')
  .action(resampleCandles);
program
  .command('backtest:run')
  .requiredOption('--strategy <strategy>')
  .requiredOption('--symbol <symbol>')
  .requiredOption('--from <from>')
  .requiredOption('--to <to>')
  .requiredOption('--initial <initial>')
  .action(backtestRun);
program
  .command('signals:generate')
  .requiredOption('--symbol <symbol>')
  .requiredOption('--interval <interval>')
  .requiredOption('--strategy <strategy>')
  .action(signalsGenerate);

program
  .command('paper:equity:snapshot')
  .requiredOption('--equity <equity>')
  .requiredOption('--source <source>')
  .action(paperEquitySnapshot);

program.parseAsync(process.argv);
